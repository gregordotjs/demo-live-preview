{"version":3,"sources":["webpack://CircularSlider/webpack/bootstrap","webpack://CircularSlider/./src/utils/transformations.js","webpack://CircularSlider/./src/utils/generate-svg.js","webpack://CircularSlider/./src/utils/consts.js","webpack://CircularSlider/./src/circular-slider.js","webpack://CircularSlider/./src/utils/validators.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toRadians","degrees","Math","PI","generateSVGElement","attributes","type","svgEl","document","createElementNS","undefined","console","log","setAttributeNS","toString","defaults","strokeWidth","handle","radius","center","x","y","CircularSlider","options","getElementById","width","height","id","appendChild","getBoundingClientRect","conatinerWidth","containerHeight","limit","Error","ValidateBoundary","circleAttributes","cx","cy","fill","stroke","class","round","addEventListener","window","e","preventDefault","setAttribute","pageX","pageY","changedTouches","pt","createSVGPoint","matrixTransform","getScreenCTM","inverse","screenToSVGCoordinates","percentage","radians","atan2","toDegrees","tilt","steps","stepInDegrees","startDegrees","index","min","max","divider","cos","sin","offset","container","color","step","onChange","ValidateProperties","this","el","ValidateAndGetContainer","currentRadius","querySelectorAll","circle","parseInt","getAttribute","abs","ValidateExistingElements"],"mappings":"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","file":"CircularSlider.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","//@ts-check\r\nexport const toRadians = (degrees) => degrees * (Math.PI / 180);\r\nexport const toDegrees = (radians) => radians * (180 / Math.PI);\r\n\r\n/**\r\n * @param {Element} svgEl\r\n * @param {number} pageX\r\n * @param {number} pageY\r\n * @returns {{x: number, y: number}}\r\n */\r\nexport function screenToSVGCoordinates(svgEl, pageX, pageY) {\r\n  // @ts-ignore\r\n  let pt = svgEl.createSVGPoint();\r\n\r\n  // Set point coordinates (pageX, pageY; relative to the <HTML> element)\r\n  pt.x = pageX;\r\n  pt.y = pageY;\r\n\r\n  // @ts-ignore\r\n  pt = pt.matrixTransform(svgEl.getScreenCTM().inverse());\r\n  return {\r\n    x: pt.x,\r\n    y: pt.y,\r\n  };\r\n}\r\n","//@ts-check\r\n\r\nimport { SVG_NAMESPACE } from \"./consts\";\r\n\r\n/**\r\n * Create an SVG element based on the attributes and type.\r\n * @param  {{[key: string]: string | number}} attributes\r\n * @param  {string} type\r\n * @return {Element} return an SVG element\r\n */\r\nexport default function generateSVGElement(attributes, type) {\r\n  const svgEl = document.createElementNS(SVG_NAMESPACE, type);\r\n  for (const key in attributes) {\r\n    if (attributes[key] === undefined) console.log(key, attributes);\r\n    svgEl.setAttributeNS(null, key, attributes[key].toString());\r\n  }\r\n  return svgEl;\r\n}\r\n","//@ts-check\r\n\r\n// mouse events\r\nexport const MOUSE_DOWN = \"mousedown\";\r\nexport const MOUSE_UP = \"mouseup\";\r\nexport const MOUSE_MOVE = \"mousemove\";\r\nexport const CLICK = \"click\";\r\n\r\n// touch events\r\nexport const TOUCH_MOVE = \"touchmove\";\r\nexport const TOUCH_START = \"touchstart\";\r\nexport const TOUCH_END = \"touchend\";\r\n\r\n// svg types\r\nexport const SVG = \"svg\";\r\nexport const CIRCLE = \"circle\";\r\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\r\n","//@ts-check\r\n\r\n// TODO:\r\n// - mobile\r\n// - default values?\r\n\r\nimport {\r\n  screenToSVGCoordinates,\r\n  toDegrees,\r\n  toRadians,\r\n} from \"./utils/transformations\";\r\nimport {\r\n  CIRCLE,\r\n  CLICK,\r\n  MOUSE_DOWN,\r\n  MOUSE_MOVE,\r\n  MOUSE_UP,\r\n  TOUCH_END,\r\n  TOUCH_MOVE,\r\n  TOUCH_START,\r\n  SVG,\r\n} from \"./utils/consts\";\r\nimport generateSVGElement from \"./utils/generate-svg\";\r\nimport {\r\n  ValidateAndGetContainer,\r\n  ValidateBoundary,\r\n  ValidateExistingElements,\r\n  ValidateProperties,\r\n} from \"./utils/validators\";\r\n\r\nconst defaults = {\r\n  strokeWidth: 40,\r\n  handle: {\r\n    strokeWidth: 10,\r\n    radius: 20,\r\n  },\r\n  center: {\r\n    x: 0,\r\n    y: 0,\r\n  },\r\n};\r\n\r\nexport class CircularSlider {\r\n  #color = \"\";\r\n  #max = 0;\r\n  #min = 0;\r\n  #step = 0;\r\n  #radius = 0;\r\n  #circumference = 0;\r\n\r\n  #isMouseDown = false;\r\n  #lastMousePosition = {\r\n    x: null,\r\n    y: null,\r\n  };\r\n\r\n  /** @type {(value: number) => void | null} */\r\n  #handleChange = null;\r\n\r\n  /**\r\n   * Elements\r\n   *\r\n   */\r\n\r\n  /** @type {Element} */\r\n  #container = null;\r\n\r\n  /** @type {Element} */\r\n  #SVGContainer = null;\r\n\r\n  /** @type {Element} */\r\n  #circle = null;\r\n\r\n  /** @type {Element} */\r\n  #progressCircle = null;\r\n\r\n  /** @type {Element} */\r\n  #sliderHandle = null;\r\n\r\n  /**\r\n   * @param {{ container: string; color: string; max: number; step: number; radius: number; min?: number; onChange?: (value: number) => void; }} options\r\n   */\r\n  constructor(options) {\r\n    const {\r\n      container,\r\n      color,\r\n      max,\r\n      min = 0,\r\n      step,\r\n      radius,\r\n      onChange = null,\r\n    } = options;\r\n\r\n    // Basic validations. TODO: validate more.\r\n    ValidateProperties(min, max, step);\r\n    this.#container = ValidateAndGetContainer(container);\r\n    ValidateExistingElements(radius);\r\n\r\n    if (onChange !== null) {\r\n      this.#handleChange = onChange;\r\n    }\r\n\r\n    this.#color = color;\r\n    this.#max = max;\r\n    this.#min = min;\r\n    this.#step = step;\r\n    this.#radius = radius;\r\n\r\n    this.#OnInit();\r\n  }\r\n\r\n  #OnInit = () => {\r\n    this.#SVGContainer = document.getElementById(\"SVGContainer\");\r\n\r\n    // generate main SVG tag if it doesn't exist yet\r\n    if (this.#SVGContainer === null) {\r\n      // this is called only the first time, when SVG container doesn't exits yet\r\n      this.#SVGContainer = generateSVGElement(\r\n        {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          id: \"SVGContainer\",\r\n        },\r\n        SVG\r\n      );\r\n\r\n      // Append SVG container to div (container)\r\n      this.#container.appendChild(this.#SVGContainer);\r\n\r\n      // calculate the center of the SVG container\r\n      const { width, height } = this.#container.getBoundingClientRect();\r\n      defaults.center = {\r\n        x: width / 2,\r\n        y: height / 2,\r\n      };\r\n    }\r\n\r\n    const { width, height } = this.#SVGContainer.getBoundingClientRect();\r\n    const { strokeWidth, radius } = defaults.handle;\r\n\r\n    ValidateBoundary(\r\n      width,\r\n      height,\r\n      this.#radius + strokeWidth + radius,\r\n      this.#radius\r\n    );\r\n\r\n    const { x, y } = defaults.center;\r\n    const circleAttributes = {\r\n      cx: x,\r\n      cy: y,\r\n      r: this.#radius,\r\n      fill: \"none\",\r\n      stroke: \"#dadada\",\r\n      [\"stroke-width\"]: defaults.strokeWidth,\r\n      style: \"cursor: pointer;\",\r\n    };\r\n\r\n    this.#circle = generateSVGElement(\r\n      { ...circleAttributes, class: \"circle\" },\r\n      CIRCLE\r\n    );\r\n\r\n    // stroke-dasharray: dash-length, gap-length\r\n    // \"hides\" the progress circle\r\n    this.#circumference = Math.round(2 * Math.PI * this.#radius);\r\n    this.#progressCircle = generateSVGElement(\r\n      {\r\n        ...circleAttributes,\r\n        [\"stroke-dasharray\"]: this.#circumference,\r\n        [\"stroke-dashoffset\"]: this.#circumference,\r\n        style: `transform: rotate(-90deg); transform-origin: ${x}px ${y}px; transition: stroke-dashoffset 0.40s; cursor: pointer;`,\r\n        stroke: this.#color,\r\n      },\r\n      CIRCLE\r\n    );\r\n\r\n    this.#sliderHandle = generateSVGElement(\r\n      {\r\n        cx: x,\r\n        cy: y - this.#radius,\r\n        r: defaults.handle.radius,\r\n        fill: \"white\",\r\n        stroke: \"#888\",\r\n        [\"stroke-width\"]: defaults.handle.strokeWidth,\r\n        style: \"cursor: grab;\",\r\n      },\r\n      CIRCLE\r\n    );\r\n\r\n    // append SVG elements to SVG container\r\n    this.#SVGContainer.appendChild(this.#circle);\r\n    this.#SVGContainer.appendChild(this.#progressCircle);\r\n    this.#SVGContainer.appendChild(this.#sliderHandle);\r\n\r\n    /**\r\n     * Setting up events for SVG elements\r\n     */\r\n\r\n    // mouse events\r\n    this.#sliderHandle.addEventListener(MOUSE_DOWN, this.#startSlide);\r\n    //this.#sliderHandle.addEventListener(MOUSE_MOVE, this.#slide);\r\n    this.#sliderHandle.addEventListener(MOUSE_UP, this.#endSlide);\r\n\r\n    // touch events\r\n    this.#sliderHandle.addEventListener(TOUCH_START, this.#startSlide);\r\n    //this.#sliderHandle.addEventListener(TOUCH_MOVE, this.#slide);\r\n    this.#sliderHandle.addEventListener(TOUCH_END, this.#endSlide);\r\n\r\n    // click events\r\n    this.#circle.addEventListener(CLICK, this.#click);\r\n    this.#progressCircle.addEventListener(CLICK, this.#click);\r\n   \r\n    // fixed issues with touchmove\r\n    this.#container.addEventListener(TOUCH_MOVE, this.#slide);\r\n    this.#container.addEventListener(MOUSE_MOVE, this.#slide);\r\n\r\n    // fixed issues if mouseup performed outside the circle\r\n    window.document.addEventListener(MOUSE_UP, this.#dropOutside);\r\n    window.document.addEventListener(TOUCH_END, this.#dropOutside);\r\n\r\n    this.#emit(this.#min);\r\n  };\r\n\r\n  // HANDLERS OF MOUSE EVENTS\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  #startSlide = (e) => {\r\n    if (e.type !== TOUCH_START) {\r\n      e.preventDefault();\r\n    }\r\n    this.#sliderHandle.setAttribute(\"style\", \"cursor: grabbing\");\r\n    this.#isMouseDown = true;\r\n  };\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  #endSlide = (e) => {\r\n    this.#sliderHandle.setAttribute(\"style\", \"cursor: grab\");\r\n    this.#isMouseDown = false;\r\n  };\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  #click = (e) => {\r\n    this.#sliderHandle.setAttribute(\"style\", \"cursor: grab\");\r\n    this.#isMouseDown = false;\r\n    this.#handleSlide(e);\r\n  };\r\n\r\n  #dropOutside = () => {\r\n    this.#sliderHandle.setAttribute(\"style\", \"cursor: grab\");\r\n    this.#isMouseDown = false;\r\n    const { x, y } = this.#lastMousePosition;\r\n    if (x !== null && y !== null) {\r\n      this.#handleSlide({ pageX: x, pageY: y });\r\n      this.#lastMousePosition.x = null;\r\n      this.#lastMousePosition.y = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  #slide = (e) => {\r\n    if (!this.#isMouseDown) return;\r\n    e.preventDefault();\r\n    this.#handleSlide(e);\r\n  };\r\n\r\n  // METHODS\r\n\r\n  /**\r\n   * @param {{ pageX: number; pageY: number; type?: string; changedTouches?: any; }} e\r\n   */\r\n  #handleSlide = ({ pageX, pageY, type, changedTouches }) => {\r\n    if (type === TOUCH_MOVE || type === TOUCH_END) {\r\n      pageX = changedTouches[0].pageX;\r\n      pageY = changedTouches[0].pageY;\r\n    }\r\n\r\n    this.#lastMousePosition.x = pageX;\r\n    this.#lastMousePosition.y = pageY;\r\n\r\n    const pt = screenToSVGCoordinates(this.#SVGContainer, pageX, pageY);\r\n    const { x, y, percentage, radians, degrees } = this.#calculateCoordinates(\r\n      pt.x,\r\n      pt.y\r\n    );\r\n    this.#sliderHandle.setAttribute(\"cx\", x.toString());\r\n    this.#sliderHandle.setAttribute(\"cy\", y.toString());\r\n    this.#moveProgressCircle(percentage);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @returns {{x: number, y: number, percentage: number, radians: number, degrees: number}}\r\n   */\r\n  #calculateCoordinates = (x, y) => {\r\n    // atan2 returns the angle in radians: https://math.stackexchange.com/questions/94379/calculating-angle-in-circle\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\r\n    let radians = Math.atan2(y - defaults.center.y, x - defaults.center.x);\r\n    let degrees = toDegrees(radians);\r\n    let tilt = degrees < -90 ? 450 : 90;\r\n    degrees += tilt;\r\n\r\n    // calculate the number of steps\r\n    const steps = (this.#max - this.#min) / this.#step;\r\n\r\n    // get a single step in degrees\r\n    const stepInDegrees = 360 / steps;\r\n\r\n    let startDegrees = 0;\r\n    let index = 1;\r\n\r\n    // go through all possible steps and identify where the current mouse position is\r\n    for (let i = 1; i <= steps; i++) {\r\n      let min = startDegrees;\r\n      let max = startDegrees + stepInDegrees;\r\n\r\n      // introduced a divider; less than the divider is min value, more is max\r\n      const divider = (min + max) / 2;\r\n\r\n      if (degrees >= min && degrees <= divider) {\r\n        // this will force the progress circle to \"snap back\" if degrees are less than the divider\r\n        index--;\r\n\r\n        // this will force the slide handler to \"snap\" to the nearest step\r\n        if (!this.#isMouseDown) {\r\n          radians = toRadians(min - tilt);\r\n        }\r\n        this.#emit(this.#min + this.#step * index);\r\n        break;\r\n      }\r\n\r\n      if (degrees > min && degrees > divider && degrees < max) {\r\n        if (!this.#isMouseDown) {\r\n          radians = toRadians(max - tilt);\r\n        }\r\n        this.#emit(this.#min + this.#step * index);\r\n        break;\r\n      }\r\n      index++;\r\n      startDegrees += stepInDegrees;\r\n    }\r\n\r\n    // calculate new coordinates based on angle: https://en.wikipedia.org/wiki/Circle#Equations\r\n    return {\r\n      radians,\r\n      degrees,\r\n      percentage: index / steps,\r\n      x: defaults.center.x + this.#radius * Math.cos(radians),\r\n      y: defaults.center.y + this.#radius * Math.sin(radians),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @param {number} percentage\r\n   */\r\n  #moveProgressCircle = (percentage) => {\r\n    let offset = this.#circumference - percentage * this.#circumference;\r\n    this.#progressCircle.setAttribute(\"stroke-dashoffset\", offset.toString());\r\n  };\r\n\r\n  /**\r\n   * @param {number} value\r\n   */\r\n  #emit = (value) => {\r\n    if (this.#handleChange !== null) {\r\n      this.#handleChange(value);\r\n    }\r\n  };\r\n}\r\n","// @ts-check\r\n\r\n/**\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} step\r\n */\r\nexport function ValidateProperties(min, max, step) {\r\n  if (step > max)\r\n    throw new Error(`Step ${step} can't be greater than max ${max}`);\r\n  if (min >= max) throw new Error(`Min ${min} can't be greater or equal than max ${max}`);\r\n  if ((max - min) % step !== 0)\r\n    throw new Error(\r\n      `Can't achieve full circle with given props: min ${min}, max ${max} and step ${step}`\r\n    );\r\n}\r\n\r\n/**\r\n * @param {string} id\r\n * @returns {HTMLElement}\r\n */\r\nexport function ValidateAndGetContainer(id) {\r\n  const el = document.getElementById(id);\r\n  if (!el) {\r\n    throw new Error(`Container with ID ${id} doesn't exist!`);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {number} currentRadius\r\n */\r\nexport function ValidateExistingElements(currentRadius) {\r\n  /** @type {NodeListOf<Element>} */\r\n  const circles = document.querySelectorAll(\".circle\");\r\n  for (const circle of circles) {\r\n    const r = parseInt(circle.getAttribute(\"r\"));\r\n    if (Math.abs(r - currentRadius) < 60) {\r\n      throw new Error(\r\n        `Circles are too close (current: ${currentRadius}, existing: ${r})`\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} conatinerWidth\r\n * @param {number} containerHeight\r\n * @param {number} limit\r\n * @param {number} radius\r\n */\r\nexport function ValidateBoundary(\r\n  conatinerWidth,\r\n  containerHeight,\r\n  limit,\r\n  radius\r\n) {\r\n  if (conatinerWidth / 2 < limit || containerHeight / 2 < limit) {\r\n    throw new Error(\r\n      `Circle is out of bounds. r: ${radius}, container width: ${conatinerWidth}, container height: ${containerHeight}`\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}